jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.4
      - uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: "3.19.6"
          channel: "stable"
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          architecture: x64
      - name: Setup
        run: make get
      - name: Static Analysis
        run: make lint
      - name: Unit Tests
        run: make test-unit
      - name: Widget Tests
        run: make test-widget

      # Install JDK and Android SDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Install Android SDK
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
          unzip commandlinetools-linux-7583922_latest.zip -d ${{ github.workspace }}/cmdline-tools
          echo "${{ github.workspace }}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          yes | cmdline-tools/latest/bin/sdkmanager --licenses
          cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "emulator" "system-images;android-30;google_apis;x86"
      - name: Create and start emulator
        run: |
          echo "no" | cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --force
          ${{ github.workspace }}/cmdline-tools/latest/emulator/emulator -avd test -no-audio -no-window -no-snapshot &
          ${{ github.workspace }}/cmdline-tools/latest/platform-tools/adb wait-for-device

      # Integration Tests
      - name: Integration Tests
        run: make test-integration

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet
      - name: Prepare App Name and Identifier
        run: |
          chmod +x ./.github/workflows/update_app_identifiers.sh
          ./.github/workflows/update_app_identifiers.sh ${{ github.event.number }}
      - name: Build release package
        run: |
          flutter build apk --release
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/flutter-paint-${{ github.event.number }}.apk
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: flutter-paint-apk-${{ github.event.number }}
          path: |
            build/app/outputs/flutter-apk/flutter-paint-${{ github.event.number }}.apk
