import 'dart:ui';

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:paintroid/core/commands/command_implementation/graphic/shape/shape_command.dart';
import 'package:paintroid/core/json_serialization/converter/offset_converter.dart';
import 'package:paintroid/core/json_serialization/converter/paint_converter.dart';
import 'package:paintroid/core/json_serialization/versioning/serializer_version.dart';
import 'package:paintroid/core/json_serialization/versioning/version_strategy.dart';

part 'rectangle_shape_command.g.dart';

@JsonSerializable()
class RectangleShapeCommand extends ShapeCommand {
  @OffsetConverter()
  Offset topLeft;
  @OffsetConverter()
  Offset topRight;
  @OffsetConverter()
  Offset bottomLeft;
  @OffsetConverter()
  Offset bottomRight;

  final int version;
  final String type;

  Path get path => Path()
    ..moveTo(topLeft.dx, topLeft.dy)
    ..lineTo(topRight.dx, topRight.dy)
    ..lineTo(bottomRight.dx, bottomRight.dy)
    ..lineTo(bottomLeft.dx, bottomLeft.dy)
    ..close();

  RectangleShapeCommand(
    super.paint,
    this.topLeft,
    this.topRight,
    this.bottomLeft,
    this.bottomRight, {
    int? version,
    this.type = SerializerType.RECTANGLE_SHAPE_COMMAND,
  }) : version = version ??
            VersionStrategyManager.strategy.getRectangleShapeCommandVersion();

  @override
  void call(Canvas canvas) => canvas.drawPath(path, paint);

  @override
  List<Object?> get props => [
        paint,
        topLeft,
        topRight,
        bottomLeft,
        bottomRight,
      ];

  @override
  Map<String, dynamic> toJson() => _$RectangleShapeCommandToJson(this);

  factory RectangleShapeCommand.fromJson(Map<String, dynamic> json) {
    int version = json['version'] as int;

    switch (version) {
      case Version.v1:
        return _$RectangleShapeCommandFromJson(json);
      case Version.v2:
      // For different versions of RectangleShapeCommand the deserialization
      // has to be implemented manually.
      // Autogenerated code can only be used for one version
      default:
        return _$RectangleShapeCommandFromJson(json);
    }
  }
}
